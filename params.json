{"name":"jQuery countdown plugin","body":"countdown is a jQuery plugin to render countdowns. Instead of unicorns this plugin does not have any magic, but if you like countdowns to be rendered the way you want, this plugin might become your best friend.\r\n\r\nUber simple setup\r\n-----------------\r\n\r\nTo use the countdown plugin you need to load the current version of jQuery (testet with 1.7.2) and the javascript file of the plugin.\r\nJust add the following lines to the `head` of your website:\r\n\r\n    <script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"/path/to/jquery.countdown.js\"></script>\r\n\r\nThen you have to initialize the plugin with your desired configuration:\r\n\r\n    <script type=\"text/javascript\">\r\n    $(function() {\r\n        $('.yourCountdownContainer').countdown({\r\n            date: \"June 7, 2087 15:03:26\"\r\n        });\r\n    });\r\n    </script>\r\n\r\nYep, it's easy like that! Enjoy the time you saved!\r\n\r\nOptions\r\n-------\r\n\r\nYou can pass a set of these options to set a custom behaviour and look for the plugin.\r\n\r\n<table>\r\n    <tr>\r\n        <th>Property (Type)</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>date</strong></td>\r\n        <td>new Date(\"June 7, 2087 15:03:25\")</td>\r\n        <td>The end time of your fancy countdown. Pass either a date object or a string/integer that will be used to create a new Date object. <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\">Here</a> you can find all accepted formats of this value.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>refresh</strong></td>\r\n        <td>1000</td>\r\n        <td>Refresh rate in milliseconds or false to avoid automatic updates.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>render</strong></td>\r\n        <td colspan=\"2\">With the render option you can set a function to change the output of the plugin. This function is called in the scope of the plugin, so you can access the <code>leadingZeros</code> method to format numbers as well as public variables and methods. A literal object will be passed to this function as an argument, containing the remaining time parts (years, days, hours, min, sec).</td>\r\n    </tr>\r\n</table>\r\n\r\n\r\nPublic plugin methods\r\n---------------------\r\n\r\n<table>\r\n    <tr>\r\n        <th>method(arguments)</th>\r\n        <th>Description</th>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>leadingZeros</strong>(<em>number, [length = 2]</em>)</td>\r\n        <td>Add leading zeros to a number.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>update</strong>(<em>newDate</em>)</td>\r\n        <td>Update the end time. The possible formats of the argument <code>newDate</code> are the same as described in the <code>date</code>-option above.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>render</strong>()</td>\r\n        <td>Call the render method. This might be usefull if you set <code>refresh</code> to false.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>stop</strong>()</td>\r\n        <td>Stops the refresh loop.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>start</strong>(<em>[refreshRate]</em>)</td>\r\n        <td>Start the refresh loop. If you set a refresh rate in the options you can overwrite it with the argument <code>refreshRate</code>. If you don't pass an argument, the old value or the default value of 1 sec will be used.</td>\r\n    </tr>\r\n</table>\r\n\r\n","tagline":"Simple, lightweight and easy to use jQuery countdown plugin","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}